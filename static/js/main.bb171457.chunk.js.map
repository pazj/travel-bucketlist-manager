{"version":3,"sources":["components/Button.js","components/Header.js","components/AddList.js","components/List.js","components/Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","src","alt","AddList","useState","setText","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","List","list","onDelete","onToggle","completed","onDoubleClick","id","cursor","Lists","lists","map","App","showAddList","setShowAddList","setLists","useEffect","a","fetchList","listsFromServer","getLists","fetch","res","json","data","fetchLists","addList","method","headers","body","JSON","stringify","deleteList","filter","toggleCheck","listToToggle","updList","mask","fill","gradientTransform","offset","stopColor","x","y","width","height","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb171457.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nfunction Header({ title, onAdd, showAdd }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <img className=\"travelIcon\" src=\"assets/travel.svg\" alt=\"\"></img>\r\n      <Button\r\n        color={showAdd ? \"#6a6352\" : \"#6a6352\"}\r\n        text={showAdd ? \"Close\" : \"Add to your list\"}\r\n        onClick={onAdd}\r\n      />\r\n      <h3 className=\"subtitle\">\r\n        Keep track if you completed a bucketlist goal by double clicking on the\r\n        list!\r\n      </h3>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nfunction AddList({ onAdd }) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add your text\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text });\r\n\r\n    //clearlisting\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-list\" onSubmit={onSubmit}>\r\n      <div className=\"list-control\">\r\n        <label>Bucketlist</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add to your list\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <input type=\"submit\" value=\"Save list\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddList;\r\n","import { FaTimes, FaCheck } from \"react-icons/fa\";\r\n\r\nfunction List({ list, onDelete, onToggle }) {\r\n  return (\r\n    <div\r\n      className={`list ${list.completed ? \"completed\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(list.id)}\r\n    >\r\n      <h3 className=\"delete-btn\">\r\n        {list.text}\r\n        <FaTimes\r\n          style={{ color: \"#6a6352\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(list.id)}\r\n        ></FaTimes>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import List from \"./List\";\r\n\r\nfunction Lists({ lists, onDelete, onToggle }) {\r\n  return (\r\n    <>\r\n      {lists.map((list) => (\r\n        <List\r\n          key={list.id}\r\n          list={list}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Lists;\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport AddList from \"./components/AddList\";\nimport Lists from \"./components/Lists\";\nimport Wave from \"react-wavify\";\n\nfunction App() {\n  const [showAddList, setShowAddList] = useState(false);\n  const [lists, setLists] = useState([]);\n  // const [textEditing, setTextEditing] = useState(null)\n\n  useEffect(() => {\n    const getLists = async () => {\n      const listsFromServer = await fetchList();\n      setLists(listsFromServer);\n    };\n    getLists();\n  }, []);\n\n  //Fetch all the lists\n  const fetchList = async () => {\n    const res = await fetch(\"http://localhost:5000/lists\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchLists = async (id) => {\n    const res = await fetch(`http://localhost:5000/lists/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //ADD TEXT TO THE LIST\n  const addList = async (list) => {\n    const res = await fetch(\"http://localhost:5000/lists\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(list),\n    });\n\n    const data = await res.json();\n    setLists([...lists, data]);\n  };\n\n  //delete bucketlist list\n  const deleteList = async (id) => {\n    await fetch(`http://localhost:5000/lists/${id}`, {\n      method: \"DELETE\",\n    });\n    setLists(lists.filter((list) => list.id !== id));\n  };\n\n  //Toggle for check the list status\n  const toggleCheck = async (id) => {\n    const listToToggle = await fetchLists(id);\n    const updList = { ...listToToggle, completed: !listToToggle.completed };\n\n    const res = await fetch(`http://localhost:5000/lists/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updList),\n    });\n\n    const data = await res.json();\n\n    setLists(\n      lists.map((list) =>\n        list.id === id ? { ...list, completed: data.completed } : list\n      )\n    );\n  };\n\n  // const submitEdits = async (id) => {\n\n  // }\n\n  return (\n    <div className=\"bg\">\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddList(!showAddList)}\n          showAdd={showAddList}\n          title=\"Travel Bucketlist Manager\"\n        />\n        <Wave mask=\"url(#mask)\" fill=\"#1277b0\">\n          <defs>\n            <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n              <stop offset=\"0\" stopColor=\"white\" />\n              <stop offset=\"0.5\" stopColor=\"black\" />\n            </linearGradient>\n            <mask id=\"mask\">\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"2000\"\n                height=\"200\"\n                fill=\"url(#gradient)\"\n              />\n            </mask>\n          </defs>\n        </Wave>\n        {showAddList && <AddList onAdd={addList} />}\n        {lists.length > 0 ? (\n          <Lists lists={lists} onDelete={deleteList} onToggle={toggleCheck} />\n        ) : (\n          \"No list to show\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}